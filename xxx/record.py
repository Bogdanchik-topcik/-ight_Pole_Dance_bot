from os import getenv

from aiogram import Router, F, Bot
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext

from dotenv import find_dotenv, load_dotenv
load_dotenv(find_dotenv())

from db import new_mesidDB, give_mesidBD, del_mesidDB

rRT = Router()
bot = Bot(getenv('TOKEN'))


Ikb1 = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text='Pole Dance Art —É—Ç—Ä–æ (–í–¢, –ü–¢ - 8:45 )', callback_data='1')],
    [InlineKeyboardButton(text='Pole Dance Art –≤–µ—á–µ—Ä (–í–¢, –ü–¢ - 20:00)', callback_data='2')],
    [InlineKeyboardButton(text='Pole Sport –Ω–∞—á–∏–Ω–∞—é—â–∏–µ (–ü–ù, –ß–¢ - 18:30, –í–° - 18:00 —Å–º–µ—à–∞–Ω–Ω–∞—è)', callback_data='3')],
    [InlineKeyboardButton(text='Pole Sport –ø—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ (–ü–ù, –ß–¢ - 19:30, –í–° - 18:00 —Å–º–µ—à–∞–Ω–Ω–∞—è)', callback_data='4')],
    [InlineKeyboardButton(text='Pole Dance Choreo (–í–° - 15:30)', callback_data='5')],
    [InlineKeyboardButton(text='Pole Dance Exotic (–°–† - 20:00, –í–° - 16:30)', callback_data='6')],
    [InlineKeyboardButton(text='Stretching (–í–¢ 19:30, –ü–¢, –í–° - 19:00)', callback_data='7')],
    [InlineKeyboardButton(text='Strip (–°–† 19:00, –í–° 18:00)', callback_data='8')],
    [InlineKeyboardButton(text='Choreo (–°–† 20:00, –í–° 12:00)', callback_data='9')],
    [InlineKeyboardButton(text='Salsation(–ü–ù, –ß–¢ - 19:00)', callback_data='10')],
    [InlineKeyboardButton(text='Pole Sport —Å –Ω—É–ª—è (–í–¢ - 18:30, –ü–¢ - 18.00)', callback_data='11')],
    [InlineKeyboardButton(text='Handstand (–í–° - 17.00)', callback_data='12')],
    [InlineKeyboardButton(text='–ù–µ –∑–Ω–∞—é, –ø–æ–¥—Å–∫–∞–∂–∏—Ç–µ', callback_data='13')]
])

Rkb1 = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å')]
], resize_keyboard=True)

class recrd(StatesGroup):
    name = State()
    phone = State()
    direction = State()
    comment = State()


@rRT.callback_query(F.data == '–ó–∞–ø–∏—Å—å')
async def records(call: Message, state: FSMContext): 


    await state.clear()
    await state.set_state(recrd.name)

    chatID = call.from_user.id
     # –†–∞–±–æ—Ç–∞ —Å –±–¥
    ID = give_mesidBD(chatID)
    if ID:
        await bot.delete_messages(chat_id=chatID, message_ids=ID)
        del_mesidDB(chatID)

    new_mesidDB(await call.message.answer("–í–≤–µ–¥–∏—Ç–µ –∏–º—è"))
    await call.answer()

@rRT.message(recrd.name)
async def name(mess: Message, state: FSMContext):

    new_mesidDB(mess)

    await state.update_data(name=mess.text)
    await state.set_state(recrd.phone)

    new_mesidDB(await mess.answer("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"))

@rRT.message(recrd.phone)
async def phone(mess: Message, state: FSMContext):

    new_mesidDB(mess)

    await state.update_data(phone=mess.text)
    await state.set_state(recrd.direction)

    new_mesidDB(await mess.answer("–í—ã–±–µ—Ä–µ—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:", reply_markup=Ikb1))
    


@rRT.callback_query(recrd.direction)
async def diction(call: CallbackQuery, state: FSMContext):

    new_mesidDB(call.message)
    –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è = {'1':'Pole Dance Art —É—Ç—Ä–æ (–í–¢, –ü–¢ - 8:45 )','2':'Pole Dance Art –≤–µ—á–µ—Ä (–í–¢, –ü–¢ - 20:00)','3':'Pole Sport –Ω–∞—á–∏–Ω–∞—é—â–∏–µ (–ü–ù, –ß–¢ - 18:30, –í–° - 18:00 —Å–º–µ—à–∞–Ω–Ω–∞—è)',
    '4':'Pole Sport –ø—Ä–æ–¥–æ–ª–∂–∞—é—â–∏–µ (–ü–ù, –ß–¢ - 19:30, –í–° - 18:00 —Å–º–µ—à–∞–Ω–Ω–∞—è)','5':'Pole Dance Choreo (–í–° - 15:30)','6':'Pole Dance Exotic (–°–† - 20:00, –í–° - 16:30)',
    '7':'Stretching (–í–¢ 19:30, –ü–¢, –í–° - 19:00)','8':'Strip (–°–† 19:00, –í–° 18:00)','9':'Choreo (–°–† 20:00, –í–° 12:00)','10':'Salsation(–ü–ù, –ß–¢ - 19:00)',
    '11':'Pole Sport —Å –Ω—É–ª—è (–í–¢ - 18:30, –ü–¢ - 18.00)','12':'Handstand (–í–° - 17.00)','13':'–ù–µ –∑–Ω–∞—é, –ø–æ–¥—Å–∫–∞–∂–∏—Ç–µ'}
    await state.update_data(direction=–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è[call.data])
    await state.set_state(recrd.comment)

    new_mesidDB(await call.message.answer('–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∏–ª–∏ –≤–æ–ø—Ä–æ—Å. –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ "–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å" ', reply_markup=Rkb1))
    await call.answer()


@rRT.message(recrd.comment)
async def comment(mess: Message, state: FSMContext):

    new_mesidDB(mess)

    await state.update_data(comment=mess.text)
    data = await state.get_data()
    await state.clear()
    # id = '5465180498'  # my
    id = '522687117'  # julia
    await bot.send_message(chat_id=id, text=f"{data['name']}")
    await bot.send_message(chat_id=id, text=f"{data['phone']}")
    await bot.send_message(chat_id=id, text=f"{data['direction']}")
    if data['comment'] != '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å':
        await bot.send_message(chat_id=id, text=f"{data['comment']}")

    new_mesidDB(await mess.answer("–ü—Ä–∏–Ω—è—Ç–æ üëç", reply_markup=ReplyKeyboardRemove()))
    
